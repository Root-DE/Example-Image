name: Docker Scan

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  set_env:
    runs-on: ubtunt-latest
    steps:
    - name: set env
      run: echo "IMAGE_TAG=$(echo ghcr.io/root-de/${{ github.repository }}/dev/test:latest |  tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
  build_and_dev-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: get env
      run: env
    - name: Login to GitHub Container Registry
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u root-de --password-stdin
    - uses: actions/checkout@v3
    - name: Build
      run: docker build . -t ${{ env.IMAGE_TAG }}
    - name: Push
      run: docker push ${{ env.IMAGE_TAG }}
  scan:
    runs-on: ubuntu-latest
    container: ghcr.io/root-de/applied-cybersecurity/scan:latest-ubuntu
    steps:
    - name: get SBOM
      run: syft ${{ env.IMAGE_TAG }} -o json --file sbom.json
    - name: get Vulnerabilites
      run: grype sbom.json -o json --file vuln.json
    - name: push files
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/Root-DE/Applied-Cybersecurity.git
        git checkout -b scans/${{ github.repository }}/$(date +%s)
        git add sbom.json vuln.json
        git commit -m "add sbom and vuln files"
        git push origin HEAD:main
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: deploy dev image as prod image
      run: docker pull ${{ env.IMAGE_TAG }}
    - name: tag dev image as prod image
      run: docker tag ${{ env.IMAGE_TAG }} ghcr.io/root-de/${{ github.repository }}/prod/test:latest
    - name: push prod image
      run: docker push ghcr.io/root-de/${{ github.repository }}/prod/test:latest
    - name: remove dev image
      run: docker rmi ${{ env.IMAGE_TAG }}
